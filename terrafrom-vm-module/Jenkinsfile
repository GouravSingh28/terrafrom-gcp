pipeline {
    agent any
    parameters {
        string(name: 'SERVER_IP', defaultValue: '', description: 'Enter the IP address of the target server')
        string(name: 'Username', defaultValue: 'gouravsingh335', description: 'Enter username for  login')
    }
    environment {
        SSH_CREDENTIALS_ID = 'ssh-key' // Replace with your Jenkins SSH credentials ID
        INSTALL_SCRIPT = './install-script.sh'  // Update with the path to your installation script
    }
    stages {
        stage('Validate Input') {
            steps {
                script {
                    if (params.SERVER_IP == '') {
                        error("SERVER_IP parameter is required.")
                    }
                }
            }
        }

        stage('Run Installation Script') {
        steps {
            withCredentials([
            string(credentialsId: 'github-token', variable: 'GIT_TOKEN'),
            sshUserPrivateKey(credentialsId: 'ssh-credentials-id', keyFileVariable: 'SSH_KEY')
            ]) {
            script {
                // Define remote SSH details
                def remote = [
                    host: "${SERVER_IP}",
                    user: "${SSH_USER}",
                    identityFile: "${SSH_KEY}"
                ]

                // Copy the script to the remote server
                sh """
                scp -i ${remote.identityFile} -o StrictHostKeyChecking=no ${INSTALL_SCRIPT} ${remote.user}@${remote.host}:/tmp/install-script.sh
                """

                // Execute the script on the remote server and pass the GIT_TOKEN
                sh """
                ssh -i ${remote.identityFile} -o StrictHostKeyChecking=no ${remote.user}@${remote.host} "GIT_TOKEN=${GIT_TOKEN} bash /tmp/install-script.sh"
                """
            }
        }
    }
}
    }
    post {
        success {
            echo "Installation script executed successfully on ${SERVER_IP}."
        }
        failure {
            echo "Failed to run the installation script on ${SERVER_IP}."
        }
    }
}
